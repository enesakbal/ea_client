// Mocks generated by Mockito 5.4.2 from annotations
// in fx_network/test/_utils/mock/test_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:fx_network/core/clients/dio/dio_client.dart' as _i5;
import 'package:fx_network/core/enums/fx_request_methods.dart' as _i7;
import 'package:fx_network/fx_network_config.dart' as _i3;
import 'package:fx_network/interfaces/fx_interface_network_model.dart' as _i1;
import 'package:fx_network/interfaces/fx_interface_response_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFXNetworkConfig_0<E1 extends _i1.FXInterfaceNetworkModel<E1>>
    extends _i2.SmartFake implements _i3.FXNetworkConfig<E1> {
  _FakeFXNetworkConfig_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFXInterfaceResponseModel_1<T1,
        E1 extends _i1.FXInterfaceNetworkModel<E1>?> extends _i2.SmartFake
    implements _i4.FXInterfaceResponseModel<T1, E1> {
  _FakeFXInterfaceResponseModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient<E extends _i1.FXInterfaceNetworkModel<E?>?> extends _i2.Mock
    implements _i5.DioClient<E> {
  MockDioClient() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i3.FXNetworkConfig<_i1.FXInterfaceNetworkModel<dynamic>> get config =>
      (super.noSuchMethod(
        Invocation.getter(#config),
        returnValue:
            _FakeFXNetworkConfig_0<_i1.FXInterfaceNetworkModel<dynamic>>(
          this,
          Invocation.getter(#config),
        ),
      ) as _i3.FXNetworkConfig<_i1.FXInterfaceNetworkModel<dynamic>>);
  @override
  _i6.Future<_i4.FXInterfaceResponseModel<R?, E?>>
      send<T extends _i1.FXInterfaceNetworkModel<T>, R>(
    String? path, {
    required T? parseModel,
    required _i7.FXRequestMethods? method,
    dynamic data,
    Map<String, dynamic>? queryParameters,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #send,
              [path],
              {
                #parseModel: parseModel,
                #method: method,
                #data: data,
                #queryParameters: queryParameters,
              },
            ),
            returnValue: _i6.Future<_i4.FXInterfaceResponseModel<R?, E?>>.value(
                _FakeFXInterfaceResponseModel_1<R?, E?>(
              this,
              Invocation.method(
                #send,
                [path],
                {
                  #parseModel: parseModel,
                  #method: method,
                  #data: data,
                  #queryParameters: queryParameters,
                },
              ),
            )),
          ) as _i6.Future<_i4.FXInterfaceResponseModel<R?, E?>>);
}
